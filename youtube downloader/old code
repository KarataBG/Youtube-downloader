        # if self.startingOptionCheck:
        #     return
        # options = [
        #     "max quality video",
        #     "max quality audio",
        #     "all options",
        #     "1080p"
        # ]
        #
        # self.clicked.set("max quality audio")
        #
        # OptionMenu(self.root, self.clicked, *options).pack()
        #
        # Button(self.root, text="Продължи", command=self.choiceOne).pack()
        #
        # self.label = Label(self.root, text=" ")
        # self.label.pack()
        # self.startingOptionCheck = False
            # for label in labels:
            # label.grid(row=0, column=0)
            # label.pack()
            # for button in buttons:
            # button.pack()

        # <Stream: itag="18"  mime_type="video/mp4" res="360p" fps="30fps" vcodec="avc1.42001E" acodec="mp4a.40.2" progressive="True" type="video">
        # <Stream: itag="134" mime_type="video/mp4" res="360p" fps="30fps" vcodec="avc1.4d401e" progressive="False" type="video">

        # self.label.config(text=self.clicked.get())
        # if self.clicked.get() == "max quality video":
        #     self.downloadQuickVideo(False, True, "", "")
        # if self.clicked.get() == "max quality audio":
        #     self.downloadQuickVideo(True, True, "", "")
        # elif self.clicked.get() == "all options" and self.choiceOneCheck:
        #     optionsPalno = [
        #         "2160p",
        #         "1440p",
        #         "1080p",
        #         "720p",
        #         "480p",
        #         "360p",
        #         "160kbps",
        #         "128kbps",
        #         "70kbps"
        #     ]
        #     drop = OptionMenu(self.root, self.clickedPalno, *optionsPalno)
        #     drop.pack()
        #     button = Button(self.root, text="Подробен избор", command=self.choiceOfPalno)
        #     button.pack()
        #     self.choiceOneCheck = False
        # elif self.clicked.get() == "1080p":
        #     self.downloadQuickVideo(False, False, "1080p", "")


    # def choiceOfPalno(self):
    #     self.URL = self.entryURL.get()
    #
    #     # print(self.URL)
    #     self.label.config(text=self.clickedPalno.get())
    #     if self.clickedPalno.get().__contains__("kbps"):
    #         self.downloadQuickVideo(True, False, "", self.clickedPalno.get())
    #
    #     elif self.clickedPalno.get().endswith("p"):
    #         self.downloadQuickVideo(False, False, self.clickedPalno.get(), "")
